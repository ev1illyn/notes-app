{"ast":null,"code":"var _jsxFileName = \"/home/evillyn/prog-estudos/kanban/src/context/task-context.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useState, ReactNode, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TaskContext = /*#__PURE__*/createContext({});\nexport function TaskContextProvider({\n  children\n}) {\n  _s();\n\n  const [taskList, setTaskList] = useState([]);\n\n  function addTaskContext(task) {\n    console.log(\"argumento task: \");\n    console.log(task);\n    console.log(\"taskList: \");\n    console.log(taskList);\n    setTaskList(task);\n  }\n\n  return /*#__PURE__*/_jsxDEV(TaskContext.Provider, {\n    value: {\n      taskList,\n      addTaskContext\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TaskContextProvider, \"mW6q2/agXv25Ej2PBKHyLCwtTHc=\");\n\n_c = TaskContextProvider;\nexport const useTask = () => {\n  _s2();\n\n  return useContext(TaskContext);\n};\n\n_s2(useTask, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskContextProvider\");","map":{"version":3,"sources":["/home/evillyn/prog-estudos/kanban/src/context/task-context.jsx"],"names":["createContext","useState","ReactNode","useContext","TaskContext","TaskContextProvider","children","taskList","setTaskList","addTaskContext","task","console","log","useTask"],"mappings":";;;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,EAAkCC,SAAlC,EAA6CC,UAA7C,QAA+D,OAA/D;;AAqBA,OAAO,MAAMC,WAAW,gBAAGJ,aAAa,CAAC,EAAD,CAAjC;AAEP,OAAO,SAASK,mBAAT,CAA6B;AAAEC,EAAAA;AAAF,CAA7B,EAA2C;AAAA;;AAE9C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;;AAEA,WAASQ,cAAT,CAAwBC,IAAxB,EAA8B;AAC1BC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACAC,IAAAA,WAAW,CAACE,IAAD,CAAX;AACH;;AAED,sBACI,QAAC,WAAD,CAAa,QAAb;AACI,IAAA,KAAK,EAAE;AAAEH,MAAAA,QAAF;AAAYE,MAAAA;AAAZ,KADX;AAAA,cAEKH;AAFL;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GApBeD,mB;;KAAAA,mB;AAsBhB,OAAO,MAAMQ,OAAO,GAAG,MAAM;AAAA;;AACzB,SAAOV,UAAU,CAACC,WAAD,CAAjB;AACH,CAFM;;IAAMS,O","sourcesContent":["import { createContext, useState, ReactNode, useContext } from 'react';\n\ntype Task = {\n    columnOrder: [];\n    columns: {\n        id: String,\n        title: String,\n        tasksIds: []\n    };\n    tasks: {\n        id: string,\n        content: string\n    };\n};\n\ntype TaskContextData = {\n    episodeList: Task[];\n    addTaskContext: (task: Task) => void;\n\n};\n\nexport const TaskContext = createContext({});\n\nexport function TaskContextProvider({ children }) {\n\n    const [taskList, setTaskList] = useState([]);\n\n    function addTaskContext(task) {\n        console.log(\"argumento task: \");\n        console.log(task);\n        console.log(\"taskList: \");\n        console.log(taskList);\n        setTaskList(task);\n    }\n\n    return (\n        <TaskContext.Provider\n            value={{ taskList, addTaskContext }}>\n            {children}\n        </TaskContext.Provider>\n\n    )\n\n}\n\nexport const useTask = () => {\n    return useContext(TaskContext);\n}"]},"metadata":{},"sourceType":"module"}