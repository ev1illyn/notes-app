{"ast":null,"code":"var _jsxFileName = \"/home/evillyn/prog-estudos/kanban/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport '@atlaskit/css-reset';\nimport styled from 'styled-components';\nimport initialData from './initial-data';\nimport Column from \"./column\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  display: flex;\n`;\n_c = Container;\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = initialData;\n\n    this.onDragEnd = result => {\n      const {\n        destination,\n        source,\n        draggableId\n      } = result;\n      if (!destination) return;\n      if (destination.droppableId === source.droppableId && destination.index === source.index) return;\n      const start = this.state.columns[source.droppableId];\n      const finish = this.state.columns[source.droppableId];\n\n      if (start === finish) {\n        const newTaskIds = Array.from(column.taskIds);\n        newTaskIds.splice(source.index, 1);\n        newTaskIds.splice(destination.index, 0, draggableId);\n        const newColumn = { ...column,\n          taskIds: newTaskIds\n        };\n        const newState = { ...this.state,\n          columns: {\n            [newColumn.id]: newColumn\n          }\n        };\n        this.setState(newState);\n        return;\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: this.onDragEnd,\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: this.state.columnOrder.map(columnId => {\n          const column = this.state.columns[columnId];\n          const tasks = column.taskIds.map(taskId => this.state.tasks[taskId]);\n          return /*#__PURE__*/_jsxDEV(Column, {\n            column: column,\n            tasks: tasks\n          }, column.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 22\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 72,\n  columnNumber: 17\n}, this), document.getElementById('root'));\n\nvar _c;\n\n$RefreshReg$(_c, \"Container\");","map":{"version":3,"sources":["/home/evillyn/prog-estudos/kanban/src/index.js"],"names":["React","ReactDOM","styled","initialData","Column","DragDropContext","Container","div","App","Component","state","onDragEnd","result","destination","source","draggableId","droppableId","index","start","columns","finish","newTaskIds","Array","from","column","taskIds","splice","newColumn","newState","id","setState","render","columnOrder","map","columnId","tasks","taskId","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,qBAAP;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,eAAT,QAAgC,qBAAhC;;AAEA,MAAMC,SAAS,GAAGJ,MAAM,CAACK,GAAI;AAC7B;AACA,CAFA;KAAMD,S;;AAIN,MAAME,GAAN,SAAkBR,KAAK,CAACS,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAEhCC,KAFgC,GAExBP,WAFwB;;AAAA,SAIhCQ,SAJgC,GAIpBC,MAAM,IAAI;AACpB,YAAM;AAAEC,QAAAA,WAAF;AAAeC,QAAAA,MAAf;AAAuBC,QAAAA;AAAvB,UAAuCH,MAA7C;AAEA,UAAI,CAACC,WAAL,EAAkB;AAElB,UAAIA,WAAW,CAACG,WAAZ,KAA4BF,MAAM,CAACE,WAAnC,IACFH,WAAW,CAACI,KAAZ,KAAsBH,MAAM,CAACG,KAD/B,EACsC;AAEtC,YAAMC,KAAK,GAAG,KAAKR,KAAL,CAAWS,OAAX,CAAmBL,MAAM,CAACE,WAA1B,CAAd;AACA,YAAMI,MAAM,GAAG,KAAKV,KAAL,CAAWS,OAAX,CAAmBL,MAAM,CAACE,WAA1B,CAAf;;AAEA,UAAIE,KAAK,KAAKE,MAAd,EAAsB;AAEpB,cAAMC,UAAU,GAAGC,KAAK,CAACC,IAAN,CAAWC,MAAM,CAACC,OAAlB,CAAnB;AACAJ,QAAAA,UAAU,CAACK,MAAX,CAAkBZ,MAAM,CAACG,KAAzB,EAAgC,CAAhC;AACAI,QAAAA,UAAU,CAACK,MAAX,CAAkBb,WAAW,CAACI,KAA9B,EAAqC,CAArC,EAAwCF,WAAxC;AAEA,cAAMY,SAAS,GAAG,EAChB,GAAGH,MADa;AAEhBC,UAAAA,OAAO,EAAEJ;AAFO,SAAlB;AAKA,cAAMO,QAAQ,GAAG,EACf,GAAG,KAAKlB,KADO;AAEfS,UAAAA,OAAO,EAAE;AACP,aAACQ,SAAS,CAACE,EAAX,GAAgBF;AADT;AAFM,SAAjB;AAOA,aAAKG,QAAL,CAAcF,QAAd;AACA;AACD;AACF,KApC+B;AAAA;;AAsChCG,EAAAA,MAAM,GAAG;AACP,wBAEE,QAAC,eAAD;AAAiB,MAAA,SAAS,EAAE,KAAKpB,SAAjC;AAAA,6BACE,QAAC,SAAD;AAAA,kBAEI,KAAKD,KAAL,CAAWsB,WAAX,CAAuBC,GAAvB,CAA2BC,QAAQ,IAAI;AAErC,gBAAMV,MAAM,GAAG,KAAKd,KAAL,CAAWS,OAAX,CAAmBe,QAAnB,CAAf;AACA,gBAAMC,KAAK,GAAGX,MAAM,CAACC,OAAP,CAAeQ,GAAf,CAAmBG,MAAM,IAAI,KAAK1B,KAAL,CAAWyB,KAAX,CAAiBC,MAAjB,CAA7B,CAAd;AAEA,8BAAO,QAAC,MAAD;AAAwB,YAAA,MAAM,EAAEZ,MAAhC;AAAwC,YAAA,KAAK,EAAEW;AAA/C,aAAaX,MAAM,CAACK,EAApB;AAAA;AAAA;AAAA;AAAA,kBAAP;AAED,SAPD;AAFJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAiBD;;AAxD+B;;AA2DlC5B,QAAQ,CAAC8B,MAAT,eAAgB,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAAyBM,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '@atlaskit/css-reset';\nimport styled from 'styled-components';\nimport initialData from './initial-data';\nimport Column from \"./column\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\n\nconst Container = styled.div`\n  display: flex;\n`;\n\nclass App extends React.Component {\n\n  state = initialData;\n\n  onDragEnd = result => {\n    const { destination, source, draggableId } = result;\n\n    if (!destination) return;\n\n    if (destination.droppableId === source.droppableId &&\n      destination.index === source.index) return;\n\n    const start = this.state.columns[source.droppableId];\n    const finish = this.state.columns[source.droppableId];\n\n    if (start === finish) {\n\n      const newTaskIds = Array.from(column.taskIds);\n      newTaskIds.splice(source.index, 1);\n      newTaskIds.splice(destination.index, 0, draggableId);\n\n      const newColumn = {\n        ...column,\n        taskIds: newTaskIds,\n      };\n\n      const newState = {\n        ...this.state,\n        columns: {\n          [newColumn.id]: newColumn,\n        },\n      };\n\n      this.setState(newState);\n      return;\n    }\n  }\n\n  render() {\n    return (\n\n      <DragDropContext onDragEnd={this.onDragEnd}>\n        <Container>\n          {\n            this.state.columnOrder.map(columnId => {\n\n              const column = this.state.columns[columnId];\n              const tasks = column.taskIds.map(taskId => this.state.tasks[taskId]);\n\n              return <Column key={column.id} column={column} tasks={tasks} />;\n\n            })\n          }\n        </Container>\n      </DragDropContext>\n    );\n  }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));"]},"metadata":{},"sourceType":"module"}