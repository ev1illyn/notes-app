{"ast":null,"code":"var _jsxFileName = \"/home/evillyn/prog-estudos/kanban/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport '@atlaskit/css-reset';\nimport styled from 'styled-components';\nimport initialData from './initial-data';\nimport Column from \"./column\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport AddTask from './add-task';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  display: flex;\n`;\n_c = Container;\nconst Cont = styled.div`\n`;\n_c2 = Cont;\nconst Status = styled.div`\n  margin: 10px auto;\n  padding: 8px;\n  border: 1px solid lightgrey;\n  border-radius: 5px;\n  width: 220px;\n  display: flex;\n  flex-direction: column;\n  font-family: 'Itim', cursive;\n  background-color: white;\n`;\n_c3 = Status;\nconst Footer = styled.h3`\n`;\n_c4 = Footer;\nconst TaskContext = /*#__PURE__*/React.createContext(this.state);\n\nclass App extends React.Component {\n  constructor(...args) {\n    var _s = $RefreshSig$();\n\n    super(...args);\n    this.state = initialData;\n    this.position = 'Você não moveu nenhuma nota.';\n\n    this.onDragStart = (start, provided) => {\n      provided.announce(`Você moveu a tarefa de posição: ${start.source.index + 1}.`);\n      this.position = `Você está movendo a tarefa de posição: ${start.source.index + 1}`;\n      const homeIndex = this.state.columnOrder.indexOf(start.source.droppableId);\n      this.setState({\n        homeIndex\n      });\n    };\n\n    this.onDragUpdate = (update, provided) => {\n      const message = update.destination ? `Você moveu a tarefa para a posição ${update.destination.index + 1}.` : `Essa não é uma área para mover a tarefa.`;\n      this.position = message;\n      provided.announce(message);\n    };\n\n    this.onDragEnd = (result, provided) => {\n      const message = result.destination ? `Você moveu a tarefa de posição ${result.source.index + 1} para a posição ${result.destination.index + 1}.` : `A tarefa foi movida para sua posição inicial.`;\n      this.position = message;\n      provided.announce(message);\n      this.setState({\n        homeIndex: null\n      });\n      const {\n        destination,\n        source,\n        draggableId\n      } = result;\n      if (!destination) return;\n      if (destination.droppableId === source.droppableId && destination.index === source.index) return;\n      const start = this.state.columns[source.droppableId];\n      const finish = this.state.columns[destination.droppableId];\n\n      if (start === finish) {\n        const newTaskIds = Array.from(start.taskIds);\n        newTaskIds.splice(source.index, 1);\n        newTaskIds.splice(destination.index, 0, draggableId);\n        const newColumn = { ...start,\n          taskIds: newTaskIds\n        };\n        const newState = { ...this.state,\n          columns: { ...this.state.columns,\n            [newColumn.id]: newColumn\n          }\n        };\n        this.setState(newState);\n        return;\n      } // move task to another list\n\n\n      const startTaskIds = Array.from(start.taskIds);\n      startTaskIds.splice(source.index, 1);\n      const newStart = { ...start,\n        taskIds: startTaskIds\n      };\n      const finishTaskIds = Array.from(finish.taskIds);\n      finishTaskIds.splice(destination.index, 0, draggableId);\n      const newFinish = { ...finish,\n        taskIds: finishTaskIds\n      };\n      const newState = { ...this.state,\n        columns: { ...this.state.columns,\n          [newStart.id]: newStart,\n          [newFinish.id]: newFinish\n        }\n      };\n      this.setState(newState);\n    };\n\n    this.addTask = _s(task => {\n      _s();\n\n      const taskContext = useContext(TaskContext);\n      let taskName = 'task-' + (Object.keys(this.state.tasks).length + 1);\n      const newTask = {\n        id: taskName,\n        content: task\n      };\n      const newState = { ...this.state,\n        tasks: { ...this.state.tasks,\n          newTask\n        }\n      };\n      this.setState(newState);\n      console.log(\"newState: \");\n      console.log(newState);\n    }, \"D9mGJRVwgOLWqaf9f+pNisrztn8=\");\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Cont, {\n      children: [/*#__PURE__*/_jsxDEV(Status, {\n        children: this.position\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n        onBeforeDragStart: this.onBeforeDragStart,\n        onDragStart: this.onDragStart,\n        onDragUpdate: this.onDragUpdate,\n        onDragEnd: this.onDragEnd,\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: this.state.columnOrder.map((columnId, index) => {\n            const column = this.state.columns[columnId];\n            const tasks = column.taskIds.map(taskId => this.state.tasks[taskId]);\n            const isDropDisabled = index < this.state.homeIndex;\n            return /*#__PURE__*/_jsxDEV(Column, {\n              column: column,\n              tasks: tasks,\n              isDropDisabled: isDropDisabled,\n              state: this.state\n            }, column.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 22\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {\n        children: [/*#__PURE__*/_jsxDEV(AddTask, {\n          addTask: this.addTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: submitTask,\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              type: \"text\",\n              value: task.data,\n              placeholder: \"Type new task...\",\n              onSubmit: submitTask,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 216,\n  columnNumber: 17\n}, this), document.getElementById('root'));\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Cont\");\n$RefreshReg$(_c3, \"Status\");\n$RefreshReg$(_c4, \"Footer\");","map":{"version":3,"sources":["/home/evillyn/prog-estudos/kanban/src/index.js"],"names":["React","ReactDOM","styled","initialData","Column","DragDropContext","AddTask","Container","div","Cont","Status","Footer","h3","TaskContext","createContext","state","App","Component","position","onDragStart","start","provided","announce","source","index","homeIndex","columnOrder","indexOf","droppableId","setState","onDragUpdate","update","message","destination","onDragEnd","result","draggableId","columns","finish","newTaskIds","Array","from","taskIds","splice","newColumn","newState","id","startTaskIds","newStart","finishTaskIds","newFinish","addTask","task","taskContext","useContext","taskName","Object","keys","tasks","length","newTask","content","console","log","render","onBeforeDragStart","map","columnId","column","taskId","isDropDisabled","submitTask","data","handleInputChange","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '@atlaskit/css-reset';\nimport styled from 'styled-components';\nimport initialData from './initial-data';\nimport Column from \"./column\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport AddTask from './add-task';\n\nconst Container = styled.div`\n  display: flex;\n`;\n\nconst Cont = styled.div`\n`;\n\nconst Status = styled.div`\n  margin: 10px auto;\n  padding: 8px;\n  border: 1px solid lightgrey;\n  border-radius: 5px;\n  width: 220px;\n  display: flex;\n  flex-direction: column;\n  font-family: 'Itim', cursive;\n  background-color: white;\n`;\n\nconst Footer = styled.h3`\n`;\n\nconst TaskContext = React.createContext(this.state);\n\nclass App extends React.Component {\n\n  state = initialData;\n  position = 'Você não moveu nenhuma nota.';\n\n  onDragStart = (start, provided) => {\n    provided.announce(\n      `Você moveu a tarefa de posição: ${start.source.index + 1}.`,\n    );\n    this.position = `Você está movendo a tarefa de posição: ${start.source.index + 1}`;\n    const homeIndex = this.state.columnOrder.indexOf(start.source.droppableId);\n\n    this.setState({\n      homeIndex,\n    });\n  };\n\n  onDragUpdate = (update, provided) => {\n    const message = update.destination\n      ? `Você moveu a tarefa para a posição ${update.destination.index + 1}.`\n      : `Essa não é uma área para mover a tarefa.`;\n    this.position = message;\n    provided.announce(message);\n  }\n\n  onDragEnd = (result, provided) => {\n\n    const message = result.destination\n      ? `Você moveu a tarefa de posição ${result.source.index + 1} para a posição ${result.destination.index + 1}.`\n      : `A tarefa foi movida para sua posição inicial.`;\n\n    this.position = message;\n    provided.announce(message);\n\n    this.setState({\n      homeIndex: null,\n    });\n\n    const { destination, source, draggableId } = result;\n\n    if (!destination) return;\n\n    if (destination.droppableId === source.droppableId &&\n      destination.index === source.index) return;\n\n    const start = this.state.columns[source.droppableId];\n    const finish = this.state.columns[destination.droppableId];\n\n    if (start === finish) {\n\n      const newTaskIds = Array.from(start.taskIds);\n      newTaskIds.splice(source.index, 1);\n      newTaskIds.splice(destination.index, 0, draggableId);\n\n      const newColumn = {\n        ...start,\n        taskIds: newTaskIds,\n      };\n\n      const newState = {\n        ...this.state,\n        columns: {\n          ...this.state.columns,\n          [newColumn.id]: newColumn,\n        },\n      };\n\n      this.setState(newState);\n      return;\n\n    }\n\n    // move task to another list\n\n    const startTaskIds = Array.from(start.taskIds);\n    startTaskIds.splice(source.index, 1);\n\n    const newStart = {\n      ...start,\n      taskIds: startTaskIds,\n    };\n\n    const finishTaskIds = Array.from(finish.taskIds);\n    finishTaskIds.splice(destination.index, 0, draggableId);\n\n    const newFinish = {\n      ...finish,\n      taskIds: finishTaskIds,\n    };\n\n    const newState = {\n      ...this.state,\n      columns: {\n        ...this.state.columns,\n        [newStart.id]: newStart,\n        [newFinish.id]: newFinish,\n      },\n    };\n    this.setState(newState);\n\n  };\n\n  addTask = (task) => {\n\n    const taskContext = useContext(TaskContext);\n\n    let taskName = 'task-' + (Object.keys(this.state.tasks).length + 1);\n\n    const newTask = {\n      id: taskName,\n      content: task\n    };\n\n    const newState = {\n      ...this.state,\n      tasks: {\n        ...this.state.tasks,\n        newTask,\n      },\n    };\n\n    this.setState(newState);\n\n    console.log(\"newState: \");\n    console.log(newState);\n  }\n\n  render() {\n\n\n    return (\n\n      <Cont>\n\n        <Status>{this.position}</Status>\n\n        <DragDropContext onBeforeDragStart={this.onBeforeDragStart}\n          onDragStart={this.onDragStart}\n          onDragUpdate={this.onDragUpdate}\n          onDragEnd={this.onDragEnd}\n        >\n\n          <Container>\n            {this.state.columnOrder.map((columnId, index) => {\n\n              const column = this.state.columns[columnId];\n              const tasks = column.taskIds.map(taskId => this.state.tasks[taskId]);\n\n              const isDropDisabled = index < this.state.homeIndex;\n\n              return <Column key={column.id} column={column} tasks={tasks} isDropDisabled={isDropDisabled} state={this.state} />;\n\n            })}\n          </Container>\n\n        </DragDropContext>\n\n        <Footer>\n          <AddTask addTask={this.addTask}></AddTask>\n\n          <div className=\"form-group\">\n            <form onSubmit={submitTask}>\n              <input\n                className=\"form-control\"\n                type=\"text\"\n                value={task.data}\n                placeholder=\"Type new task...\"\n                onSubmit={submitTask}\n                onChange={handleInputChange}\n              ></input>\n            </form>\n          </div>\n\n        </Footer>\n\n      </Cont>\n\n    );\n\n  }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));"]},"metadata":{},"sourceType":"module"}