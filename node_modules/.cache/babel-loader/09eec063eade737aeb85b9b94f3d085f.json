{"ast":null,"code":"var _jsxFileName = \"/home/evillyn/prog-estudos/kanban/src/column.jsx\";\nimport * as React from 'react';\nimport styled from 'styled-components';\nimport Task from './task';\nimport { Droppable } from \"react-beautiful-dnd\";\nimport './index.css';\nimport AddTask from './add-task';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n    margin: 8px;\n    border: 1px solid lightgrey;\n    border-radius: 5px;\n    width: 220px;\n    display: flex;\n    flex-direction: column;\n    font-family: 'Itim', cursive;\n    background-color: #d4d4d4;\n`;\n_c = Container;\nconst Title = styled.h3`\n    padding: 8px;\n    color: #79888b;\n`;\n_c2 = Title;\nconst TaskList = styled.div`\n    padding: 8px;\n    color: fff;\n    background-color: ${props => props.isDraggingOver ? '#c7c7c7' : '#d4d4d4'};\n    flex-grow: 1;\n`;\n_c3 = TaskList;\nconst Footer = styled.h3`\n`;\n_c4 = Footer;\nexport default class Column extends React.Component {\n  render() {\n    const [task, setTask] = useState({\n      data: \"\"\n    });\n\n    const addTask = task => {\n      const newTask = {\n        id: 'task-' + this.props.state.length,\n        task\n      };\n      this.props.setState({\n        tasks: [this.props.state.tasks, newTask]\n      });\n      console.log(task);\n      console.log('---------');\n      console.log(this.props.state);\n    }; // funcao executada a cada tecla digitada\n\n\n    const handleInputChange = e => {\n      setTask({\n        data: e.target.value\n      });\n    }; // funcao executada ao teclar enter\n\n\n    const submitTask = e => {\n      e.preventDefault();\n      addTask(task.data);\n      setTask({\n        data: \"\"\n      });\n      console.log(task);\n    };\n\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: this.props.column.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: this.props.column.id,\n        isDropDisabled: this.props.isDropDisabled,\n        children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(TaskList, {\n          ref: provided.innerRef,\n          ...provided.droppableProps,\n          isDraggingOver: snapshot.isDraggingOver,\n          children: [this.props.tasks.map((task, index) => /*#__PURE__*/_jsxDEV(Task, {\n            task: task,\n            index: index\n          }, task.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 33\n          }, this)), provided.placeholder, /*#__PURE__*/_jsxDEV(Footer, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              addTask: addTask,\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: submitTask,\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"form-control\",\n                  type: \"text\",\n                  value: task.data,\n                  placeholder: \"Type new task...\",\n                  onSubmit: submitTask,\n                  onChange: handleInputChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Title\");\n$RefreshReg$(_c3, \"TaskList\");\n$RefreshReg$(_c4, \"Footer\");","map":{"version":3,"sources":["/home/evillyn/prog-estudos/kanban/src/column.jsx"],"names":["React","styled","Task","Droppable","AddTask","Container","div","Title","h3","TaskList","props","isDraggingOver","Footer","Column","Component","render","task","setTask","useState","data","addTask","newTask","id","state","length","setState","tasks","console","log","handleInputChange","e","target","value","submitTask","preventDefault","column","title","isDropDisabled","provided","snapshot","innerRef","droppableProps","map","index","placeholder"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport styled from 'styled-components';\nimport Task from './task';\nimport { Droppable } from \"react-beautiful-dnd\";\nimport './index.css';\nimport AddTask from './add-task';\n\nconst Container = styled.div`\n    margin: 8px;\n    border: 1px solid lightgrey;\n    border-radius: 5px;\n    width: 220px;\n    display: flex;\n    flex-direction: column;\n    font-family: 'Itim', cursive;\n    background-color: #d4d4d4;\n`;\n\nconst Title = styled.h3`\n    padding: 8px;\n    color: #79888b;\n`;\n\nconst TaskList = styled.div`\n    padding: 8px;\n    color: fff;\n    background-color: ${props => (props.isDraggingOver ? '#c7c7c7' : '#d4d4d4')};\n    flex-grow: 1;\n`;\n\nconst Footer = styled.h3`\n`;\n\n\nexport default class Column extends React.Component {\n    render() {\n\n        const [task, setTask] = useState({ data: \"\" });\n        const addTask = (task) => {\n\n            const newTask = {\n                id: 'task-' + this.props.state.length,\n                task\n            };\n            this.props.setState({ tasks: [this.props.state.tasks, newTask] });\n\n            console.log(task);\n            console.log('---------');\n            console.log(this.props.state);\n        }\n\n        // funcao executada a cada tecla digitada\n        const handleInputChange = e => {\n            setTask({ data: e.target.value });\n        };\n\n        // funcao executada ao teclar enter\n        const submitTask = e => {\n\n            e.preventDefault();\n            addTask(task.data);\n            setTask({ data: \"\" });\n            console.log(task);\n\n        };\n\n        return (\n            <Container>\n\n                <Title>{this.props.column.title}</Title>\n\n                <Droppable\n                    droppableId={this.props.column.id}\n                    isDropDisabled={this.props.isDropDisabled}\n                >\n                    {(provided, snapshot) => (\n                        <TaskList ref={provided.innerRef} {...provided.droppableProps}\n                            isDraggingOver={snapshot.isDraggingOver}>\n\n                            {this.props.tasks.map((task, index) => (\n                                <Task key={task.id} task={task} index={index} />\n                            ))}\n                            {provided.placeholder}\n                            <Footer>\n                                <div className=\"form-group\" addTask={addTask}>\n                                    <form onSubmit={submitTask}>\n                                        <input\n                                            className=\"form-control\"\n                                            type=\"text\"\n                                            value={task.data}\n                                            placeholder=\"Type new task...\"\n                                            onSubmit={submitTask}\n                                            onChange={handleInputChange}\n                                        ></input>\n                                    </form>\n                                </div>\n                            </Footer>\n                        </TaskList>\n                    )}\n                </Droppable>\n\n            </Container>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}